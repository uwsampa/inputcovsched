# -*- Makefile -*-

include $(LEVEL)/Makefile.config

# Include LLVM's Master Makefile config and rules.
include $(LLVM_OBJ_ROOT)/Makefile.config

ifeq ($(BYTECODE_LIBRARY), 1)
#
# Override make variables based on the runtime configuration. We want
# to override whatever the user may have said on the command line,
# hence the use of override.
#
override ENABLE_OPTIMIZED := $(RUNTIME_ENABLE_OPTIMIZED)
override DISABLE_ASSERTIONS := $(RUNTIME_DISABLE_ASSERTIONS)
override ENABLE_PROFILING := $(RUNTIME_ENABLE_PROFILING)
override ENABLE_COVERAGE := $(RUNTIME_ENABLE_COVERAGE)
endif

include $(LLVM_SRC_ROOT)/Makefile.rules

# These flags should be used to build all program that will be analyzed with klee
# List is inspired by Rules.mak from uclibc
Klee.Runtime.Inc := -D__UCLIBC_HAS_TLS__=1
Klee.Runtime.Inc := -I$(PROJ_SRC_ROOT)/runtime/POSIX/wrappers
Klee.Runtime.Inc += -include $(KLEE_UCLIBC)/include/libc-symbols.h
Klee.Runtime.Inc += -isystem $(KLEE_UCLIBC)/include
Klee.Runtime.Inc += -isystem $(KLEE_UCLIBC)/include/libc/sysdeps/linux
Klee.Runtime.Inc += -isystem $(KLEE_UCLIBC)/include/libc/sysdeps/linux/x86_64
Klee.Runtime.Inc += -Wsystem-headers

# LLVMCC was added in 2.7.
ifeq ($(LLVMCC),)
LLVMCC := $(LLVMGCC)
LLVMCXX := $(LLVMGXX)
endif

LD.Flags += -L$(PROJ_SRC_ROOT)/stp/lib

CXX.Flags += -Woverloaded-virtual -Wno-variadic-macros
CXX.Flags += -DLLVM_23 -fexceptions -fno-omit-frame-pointer -DEXT_HASH_MAP
CXX.Flags += -I$(PROJ_SRC_ROOT)/stp/include

PROTOC ?= protoc

ifeq ($(ENABLE_EXT_STP),1)
  LD.Flags += -L$(STP_ROOT)/lib
  CXX.Flags += -I$(STP_ROOT)/include
else
  LD.Flags += -L$(PROJ_SRC_ROOT)/stp/lib
  CXX.Flags += -I$(PROJ_SRC_ROOT)/stp/include
endif

CXX.Flags += -I$(PROJ_SRC_ROOT)/../llvm-poolalloc/include
LD.Flags += -L$(PROJ_SRC_ROOT)/../llvm-poolalloc/${BuildMode}/lib

CXX.Flags += -DKLEE_DIR=\"$(PROJ_OBJ_ROOT)\"

LD.Flags += -lrt

%.pb.cc %.pb.h: %.proto
	$(PROTOC) --cpp_out=./ $<
